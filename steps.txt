Abra o terminal:
    Shift + ' ou menu View > Terminal


Executar o comando abaixo no terminal para criar o projeto:
    npx create-expo-app@latest GalloFlix --template blank


Acesse a pasta do projeto com:
    cd GalloFlix


E execute o comando abaixo para instalar o pacote de execução na web:
    npx expo install react-dom react-native-web @expo/metro-runtime


Execute o comando abaixo para instalar os pacotes de navegação
    npm install @react-navigation/native @react-navigation/stack @react-navigation/bottom-tabs
    npx expo install react-native-screens react-native-safe-area-context react-native-gesture-handler @react-native-masked-view/masked-view


Execute o comando abaixo para instalar o pacote do firebase
    npm install firebase


Crie na Raiz do projeto um arquivo com o nome firebase.config.js:
// Import the functions you need from the SDKs you need
import { initializeApp } from "firebase/app";
import { getAuth } from 'firebase/auth';

//import { getAnalytics } from "firebase/analytics";
// TODO: Add SDKs for Firebase products that you want to use
// https://firebase.google.com/docs/web/setup#available-libraries

// Your web app's Firebase configuration
// For Firebase JS SDK v7.20.0 and later, measurementId is optional
const firebaseConfig = {
  apiKey: "AIzaSyDOkAL608uy0UvoWZe7PxJ4zLAOR2cJKqE",
  authDomain: "galloflix-6e4c3.firebaseapp.com",
  projectId: "galloflix-6e4c3",
  storageBucket: "galloflix-6e4c3.appspot.com",
  messagingSenderId: "230388462963",
  appId: "1:230388462963:web:f869217f2193f87f174106",
  measurementId: "G-GXQ16W2FL8"
};

// Initialize Firebase
const firebase = initializeApp(firebaseConfig);
export const auth = getAuth(firebase);


Crie uma pasta screens na raiz do projeto


Dentro de screens criar 4 pastas com os arquivos index.js e styles.js:
1. Login:
import React from 'react'
import { View, Text } from 'react-native'

const Login = () => {
  return (
    <View>
      <Text>Login</Text>
    </View>
  )
}

export default Login


2. Register:
import React from 'react'
import { View, Text } from 'react-native'

const Register = () => {
  return (
    <View>
      <Text>Register</Text>
    </View>
  )
}

export default Register


3. Splash:
import { View, Text } from 'react-native'
import React from 'react'

const Splash = () => {
  return (
    <View>
      <Text>Splash</Text>
    </View>
  )
}

export default Splash


4. Home:
import { View, Text } from 'react-native'
import React from 'react'

const Home = () => {
  return (
    <View>
      <Text>Home</Text>
    </View>
  )
}

export default Home


Alterar o código do App.js:
import "react-native-gesture-handler";
import React from "react";
import { KeyboardAvoidingView, Platform } from "react-native";
import { NavigationContainer } from "@react-navigation/native";
import {
  createStackNavigator,
  TransitionPresets,
} from "@react-navigation/stack";
import Login from "./screens/Login";
import Register from "./screens/Register";
import Splash from "./screens/Splash";
import Home from "./screens/Home";

const Stack = createStackNavigator();

export default function App() {
  const screenOptions = {
    headerShown: false,
    ...TransitionPresets.SlideFromRightIOS,
  };

  return (
    <NavigationContainer>
      <KeyboardAvoidingView
        behavior={Platform.OS === "ios" ? "padding" : "height"}
        style={{ flex: 1 }}
        keyboardVerticalOffset={Platform.OS === "ios" ? -64 : 0}
      >
        <Stack.Navigator
          initialRouteName="Splash"
          screenOptions={screenOptions}
        >
          <Stack.Screen
            name="Login"
            component={Login}
            options={{
              gestureEnabled: true,
              animationEnabled: true,
              gestureDirection: "horizontal",
            }}
          />
          <Stack.Screen
            name="Register"
            component={Register}
            options={{
              gestureEnabled: true,
              animationEnabled: true,
              gestureDirection: "horizontal",
            }}
          />
          <Stack.Screen
            name="Splash"
            component={Splash}
            options={{
              gestureEnabled: true,
              animationEnabled: true,
              gestureDirection: "horizontal",
            }}
          />
          <Stack.Screen
            name="Home"
            component={Home}
            options={{
              gestureEnabled: true,
              animationEnabled: true,
              gestureDirection: "horizontal",
            }}
          />
        </Stack.Navigator>
      </KeyboardAvoidingView>
    </NavigationContainer>
  );
}



Para rodar o projeto, diretamente no celular ou emulador, temos duas opções:
    npm expo start --android
    npm run android


Copie os arquivos de assets na pasta assets


Altere o arquivo app.json:
{
  "expo": {
    "name": "GalloFlix",
    "slug": "GalloFlix",
    "version": "1.0.0",
    "orientation": "portrait",
    "icon": "./assets/icon2.png",
    "userInterfaceStyle": "dark",
    "splash": {
      "image": "./assets/splash.jpg",
      "resizeMode": "cover",
      "backgroundColor": "#000000"
    },
    "ios": {
      "supportsTablet": true,
      "requireFullScreen": true
    },
    "android": {
      "adaptiveIcon": {
        "foregroundImage": "./assets/icon2.png",
        "backgroundColor": "#000000"
      }
    },
    "web": {
      "favicon": "./assets/favicon.png"
    }
  }
}


Agora edite a SplashScreen.js:
import React from "react";
import { View, StyleSheet } from "react-native";
import { auth } from "../firebase.config";
import { StatusBar } from "expo-status-bar";

const Splash = ({ navigation }) => {
  useEffect(() => {
    const unsubscribe = auth.onAuthStateChanged((authUser) => {
      if (authUser) {
        navigation.replace("Home");
      } else {
        navigation.replace("Login");
      }
    });
    return () => {
      unsubscribe();
    };
  }, []);

  return (
    <>
      <StatusBar style="light"></StatusBar>
      <View style={styles.container} />
    </>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "black",
    justifyContent: "center",
    alignItems: "center",
  },
});

export default Splash;


Teste o projeto


Agora edite o arquivo styles.js da pasta Login:
import { Dimensions, StyleSheet } from "react-native";

const dimensions = Dimensions.get("window");

export const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#000',
  },
  backgroundImage: {
    flex: 1,
    height: dimensions.height,
  },
  overlay: {
  },
  image: {
  },
  formContainer: {
  },
  signInText: {
  },
  input: {
  },
  submitButton: {
  },
  submitButtonText: {
  },
  linkForget: {
  },
  linkContainer: {
  },
  links: {
  },
});


Agora edite o arquivo index.js da pasta Login:
import React, { useState } from "react";
import { StatusBar } from "expo-status-bar";
import {
  Image,
  ImageBackground,
  Text,
  TextInput,
  TouchableOpacity,
  View,
  Alert,
  ScrollView,
} from "react-native";
import { styles } from "./styles";

const Login = ({ navigation }) => {
  const login = () => {
    alert("Fazer o login");
  };

  const register = () => {
    navigation.navigate("Register");
  };
    
  return (
    <>
      <StatusBar style="light"></StatusBar>
      <ScrollView style={styles.container}>
        <ImageBackground
          source={require("../../assets/background.jpg")}
          style={styles.backgroundImage}
        >
          <View style={styles.overlay}>
            <Image
              source={require("../../assets/logo.png")}
              style={styles.image}
            />
            <View style={styles.formContainer}>
              <Text style={styles.signInText}>Entrar</Text>
              <TextInput
                placeholder="Email"
                placeholderTextColor="#ffffff"
                style={styles.input}
                autoCapitalize="none"
                keyboardType="email-address"
              />
              <TextInput
                placeholder="Senha"
                placeholderTextColor="#ffffff"
                style={styles.input}
                secureTextEntry
                autoCapitalize="none"
              />
              <TouchableOpacity style={styles.submitButton} onPress={login}>
                <Text style={styles.submitButtonText}>Entrar</Text>
              </TouchableOpacity>
              <TouchableOpacity style={styles.linkForget}>
                <Text style={styles.links}>Esqueceu a senha?</Text>
              </TouchableOpacity>
              <View style={styles.linkContainer}>
                <Text
                  style={[
                    styles.links,
                    { fontWeight: "normal", marginRight: 10 },
                  ]}
                >
                  Novo por aqui?
                </Text>
                <TouchableOpacity onPress={register}>
                  <Text style={styles.links}>Inscreva-se agora.</Text>
                </TouchableOpacity>
              </View>
            </View>
          </View>
        </ImageBackground>
      </ScrollView>
    </>
  );
};

export default Login;


Agora edite o arquivo styles.js da pasta Login:
import { Dimensions, StyleSheet } from "react-native";

const dimensions = Dimensions.get("window");

export const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#000',
  },
  backgroundImage: {
    flex: 1,
    height: dimensions.height,
  },
  overlay: {
    backgroundColor: "rgba(0, 0, 0, 0.7)",
    flex: 1,
    justifyContent: "center",
    alignItems: "center",
  },
  image: {
    position: "absolute",
    top: -30,
    width: 230,
    resizeMode: "contain",
    alignSelf: "flex-start",
    marginLeft: 20,
  },
  formContainer: {
    width: "90%",
    padding: 20,
    backgroundColor: "black",
    borderRadius: 15,
    justifyContent: "center",
    alignItems: "center",
  },
  signInText: {
    fontSize: 30,
    fontWeight: "bold",
    color: "white",
    marginVertical: 10,
    textAlign: "left",
    width: "100%",
    marginLeft: 10,
  },
  input: {
    width: "95%",
    height: 50,
    border: "none",
    padding: 10,
    color: "white",
    borderRadius: 5,
    marginTop: 10,
    fontSize: 16,
    backgroundColor: "#333333",
  },
  submitButton: {
    width: "95%",
    height: 55,
    color: "white",
    borderRadius: 10,
    border: "none",
    justifyContent: "center",
    alignItems: "center",
    marginTop: 40,
    backgroundColor: "#E7442E",
  },
  submitButtonText: {
    fontSize: 18,
    fontWeight: "bold",
    paddingLeft: 5,
    color: "white",
  },
  linkForget: {
    width: "100%",
    marginTop: 20,
    justifyContent: "center",
    alignItems: "center",
  },
  linkContainer: {
    flexDirection: "row",
    justifyContent: "center",
    marginTop: 30,
  },
  links: {
    fontSize: 16,
    fontWeight: "bold",
    color: "white",
  },
});


Agora edite o arquivo styles.js da pasta Register:
import { Dimensions, StyleSheet } from "react-native";

const dimensions = Dimensions.get("window");

export const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#000',
  },
  backgroundImage: {
    flex: 1,
    height: dimensions.height,
  },
  overlay: {
  },
  image: {
  },
  formContainer: {
  },
  signInText: {
  },
  input: {
  },
  submitButton: {
  },
  submitButtonText: {
  },
  linkContainer: {
  },
  links: {
  },
});


Agora edite o arquivo index.js da pasta Register:
import React, { useState } from "react";
import { StatusBar } from "expo-status-bar";
import {
  Image,
  ImageBackground,
  Text,
  TextInput,
  TouchableOpacity,
  View,
  Alert,
  ScrollView,
} from "react-native";
import { styles } from "./styles";

const Register = ({ navigation }) => {
  const login = () => {
    navigation.navigate("Login");
  };

  const register = () => {
    alert("Fazer o registro");
  };

  return (
    <>
      <StatusBar style="light"></StatusBar>
      <ScrollView style={styles.container}>
        <ImageBackground
          source={require("../../assets/background.jpg")}
          style={styles.backgroundImage}
        >
          <View style={styles.overlay}>
            <Image
              source={require("../../assets/logo.png")}
              style={styles.image}
            />
            <View style={styles.formContainer}>
              <Text style={styles.signInText}>Criar Conta</Text>
              <TextInput
                placeholder="Nome"
                placeholderTextColor="#ffffff"
                style={styles.input}
                autoCapitalize="none"
              />
              <TextInput
                placeholder="Email"
                placeholderTextColor="#ffffff"
                style={styles.input}
                autoCapitalize="none"
                keyboardType="email-address"
              />
              <TextInput
                placeholder="Senha"
                placeholderTextColor="#ffffff"
                style={styles.input}
                secureTextEntry
                autoCapitalize="none"
              />
              <TouchableOpacity style={styles.submitButton} onPress={register}>
                <Text style={styles.submitButtonText}>Criar</Text>
              </TouchableOpacity>
              <View style={styles.linkContainer}>
                <Text
                  style={[
                    styles.links,
                    { fontWeight: "normal", marginRight: 10 },
                  ]}
                >
                  Já possui uma conta?
                </Text>
                <TouchableOpacity onPress={login}>
                  <Text style={styles.links}>Entre aqui.</Text>
                </TouchableOpacity>
              </View>
            </View>
          </View>
        </ImageBackground>
      </ScrollView>
    </>
  );
};


export default Register


Agora edite o arquivo styles.js da pasta Register:
import { Dimensions, StyleSheet } from "react-native";

const dimensions = Dimensions.get("window");

export const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#000',
  },
  backgroundImage: {
    flex: 1,
    height: dimensions.height,
  },
  overlay: {
    backgroundColor: "rgba(0, 0, 0, 0.7)",
    flex: 1,
    justifyContent: "center",
    alignItems: "center",
  },
  image: {
    position: "absolute",
    top: -30,
    width: 230,
    resizeMode: "contain",
    alignSelf: "flex-start",
    marginLeft: 20,
  },
  formContainer: {
    width: "90%",
    padding: 20,
    backgroundColor: "black",
    borderRadius: 15,
    justifyContent: "center",
    alignItems: "center",
  },
  signInText: {
    fontSize: 30,
    fontWeight: "bold",
    color: "white",
    marginVertical: 10,
    textAlign: "left",
    width: "100%",
    marginLeft: 10,
  },
  input: {
    width: "95%",
    height: 50,
    border: "none",
    padding: 10,
    color: "white",
    borderRadius: 5,
    marginTop: 10,
    fontSize: 16,
    backgroundColor: "#333333",
  },
  submitButton: {
    width: "95%",
    height: 55,
    color: "white",
    borderRadius: 10,
    border: "none",
    justifyContent: "center",
    alignItems: "center",
    marginTop: 40,
    backgroundColor: "#E7442E",
  },
  submitButtonText: {
    fontSize: 18,
    fontWeight: "bold",
    paddingLeft: 5,
    color: "white",
  },
  linkContainer: {
    flexDirection: "row",
    justifyContent: "center",
    marginTop: 30,
  },
  links: {
    fontSize: 16,
    fontWeight: "bold",
    color: "white",
  },
});


Testar o projeto com os alunos


Voltando ao Login para adicionar a autenticação:
import React, { useState } from "react";
import { StatusBar } from "expo-status-bar";
import {
  Image,
  ImageBackground,
  Text,
  TextInput,
  TouchableOpacity,
  View,
  Alert,
  ScrollView,
} from "react-native";
import { styles } from "./styles";
import { auth } from "../../firebase.config";
import { signInWithEmailAndPassword } from "firebase/auth";

const Login = ({ navigation }) => {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [loading, setLoading] = useState(false);

  const login = () => {
    setLoading(true);
    if (!email || !password) {
      Alert.alert("Problemas ao Entrar", "Informe todos os dados!!!!", [
        { text: "Ok", style: "default" },
      ]);
      setPassword("");
      setLoading(false);
      return;
    }

    signInWithEmailAndPassword(auth, email, password)
      .then((userCredential) => {
        const user = userCredential.user;
        setPassword("");
        setEmail("");
        console.log(user);
        navigation.replace("Home");
      })
      .catch((error) => {
        const errorCode = error.code;
        const errorMessage = error.message;
        setPassword("");
        Alert.alert(
          'Acesso Negado',
          'Usuário e/ou Senha Inválidos!',
          [{ text: 'Ok', style: 'default ' }]
        );
      });
  };

  const register = () => {
    navigation.navigate("Register");
  };

  return (
    <>
      <StatusBar style="light"></StatusBar>
      <ScrollView style={styles.container}>
        <ImageBackground
          source={require("../../assets/background.jpg")}
          style={styles.backgroundImage}
        >
          <View style={styles.overlay}>
            <Image
              source={require("../../assets/logo.png")}
              style={styles.image}
            />
            <View style={styles.formContainer}>
              <Text style={styles.signInText}>Entrar</Text>
              <TextInput
                placeholder="Email"
                placeholderTextColor="#ffffff"
                style={styles.input}
                autoCapitalize="none"
                keyboardType="email-address"
                value={email}
                onChangeText={setEmail}
              />
              <TextInput
                placeholder="Senha"
                placeholderTextColor="#ffffff"
                style={styles.input}
                secureTextEntry
                autoCapitalize="none"
                value={password}
                onChangeText={setPassword}
              />
              <TouchableOpacity style={styles.submitButton} onPress={login}>
                <Text style={styles.submitButtonText}>Entrar</Text>
              </TouchableOpacity>
              <TouchableOpacity style={styles.linkForget}>
                <Text style={styles.links}>Esqueceu a senha?</Text>
              </TouchableOpacity>
              <View style={styles.linkContainer}>
                <Text
                  style={[
                    styles.links,
                    { fontWeight: "normal", marginRight: 10 },
                  ]}
                >
                  Novo por aqui?
                </Text>
                <TouchableOpacity onPress={register}>
                  <Text style={styles.links}>Inscreva-se agora.</Text>
                </TouchableOpacity>
              </View>
            </View>
          </View>
        </ImageBackground>
      </ScrollView>
    </>
  );
};

export default Login;
















Execute o comando abaixo para instalar o pacote do splash-screen e de exibição de videos
npx expo install expo-splash-screen expo-av




You are initializing Firebase Auth for React Native without providing
AsyncStorage. Auth state will default to memory persistence and will not
persist between sessions. In order to persist auth state, install the package
"@react-native-async-storage/async-storage" and provide it to
initializeAuth:

import { initializeAuth, getReactNativePersistence } from 'firebase/auth';
import ReactNativeAsyncStorage from '@react-native-async-storage/async-storage';
const auth = initializeAuth(app, {
  persistence: getReactNativePersistence(ReactNativeAsyncStorage)
});